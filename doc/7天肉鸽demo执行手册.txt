第一天：项目规划与基础设置
// 确定游戏概念：明确肉鸽元素（如随机生成地图、永久死亡、道具和敌人随机性等）与RPG元素的结合方式。
// 安装与配置RPGMV：确保RPGMV软件已安装，并熟悉其基本操作界面。
// 创建新项目：设置项目名称、分辨率、帧率等基本参数。
设计角色与敌人：初步设计玩家角色和几种基础敌人的外观与属性。{
      精_精灵4人组
      海_海族4人组
}

第二天：地图与事件设计
// 设计随机地图生成机制：利用RPGMV的插件或脚本功能，实现地图的随机生成。如果时间紧迫，可以先设计几个固定的地图作为demo。 '地图迁移'
// 创建地图：在RPGMV中绘制或导入地图素材，创建游戏场景。
设置事件：为地图上的各个区域设置事件，如
	敌人遭遇 (5-7-9)还需要调整{
		遇敌概率
		站位问题,√
		还有重复魔法技能√
	}
	宝箱开启√
		绿 2 药水
		黄 3 有概率宝箱怪 1/4 药水 护甲
		蓝 4 有概率宝箱怪 2/5 药水 护甲 武器
		橙 1 武器 
	NPC对话{
		完全没处理,没有灵魂今天
	}

第三天：角色与战斗系统
/*完善角色属性：为玩家角色和敌人设置详细的属性（如生命值、攻击力、防御力等）。{
	需要构建详细的测试案例
		[junit] 肉鸽demo.excelJunit "数据战斗模拟_egMax"
		读取数据成功√
		纯物理系伤害计算√
		法系伤害{√
			抽取伤害计算公式√
				使用阿里{×

					报错1 
					"if(a.calType){" +
					            "    b.hp=b.hp-(a.atk*30-b.def*25);" +
					            "}else{" +
					            "    b.hp=b.hp-(a.mat*30-b.mdf*25);" +
					            "}"

					报错2 
					"if(a.calType){" +
					            "    b.hp=b.hp-(a.atk*30-b.def*25);" +
					            "}";
					报错3
					b.hp=b.hp-(a.atk*30-b.def*25)

					b.hp-(a.atk*30-b.def*25)
				}
		}
		制作战力排行榜√
}*/
// 实现战斗系统：配置战斗界面，设置战斗逻辑（如回合制、即时战斗等），并确保角色和敌人能正常进行战斗。{
	石洞 7
	冰洞 9
	被诅咒的山洞 9
	熔岩洞 7
	boss房 10

	重新设置遇敌步数(...)
}
// 添加肉鸽元素：在战斗系统中融入随机性，如、随机技能效果等。

第四天：道具与装备(52)系统 随机掉落物品
设计道具与装备：创建多种道具和装备，并为它们设置不同的效果。
实现获取与使用：为道具和装备设置获取途径（如战斗掉落、商店购买等），并确保玩家能在游戏中正常使用它们。
	武器20{
		测试武器属性√
		属性克制表√
			https://wiki.52poke.com/wiki/属性相克表
		测试属性克制{
			小怪属性设置√
		}
	}
	装备32

第五天：UI与音效 ×
设计UI界面：为游戏设计简洁明了的UI界面，包括主菜单、背包、战斗界面等。
添加音效：为游戏中的各种事件（如战斗、行走、技能释放等）添加音效，提升游戏体验。

第六天：测试与调试
全面测试：对游戏进行多次测试，确保没有明显的bug和逻辑错误。
优化性能：根据测试结果调整游戏性能，确保游戏在大多数设备上都能流畅运行。

第七天：整理与发布
整理项目文件：整理游戏项目中的所有文件，确保它们有序且易于管理。
制作demo视频或截图：为游戏demo制作宣传视频或截图，以便向他人展示。
发布demo：将游戏demo发布到合适的平台（如Steam、Itch.io等），并附上游戏介绍和玩法说明。